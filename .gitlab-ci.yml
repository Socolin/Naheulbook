image: node:lts

cache:
  paths:
    - node_modules/

build:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  image: node:latest
  stage: build
  tags:
    - docker
  script:
    - npm install
    - node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build --prod
  artifacts:
    paths:
    - dist/

deploy_staging:
  image: ubuntu
  stage: deploy
  tags:
    - docker
  script:
    - apt-get update -y && apt-get install rsync -y
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_RSYNC_PREPROD_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - rsync -a dist/ naheulbook@naheulbook.fr:/frontend
    - ssh-add -D
    - echo "$SSH_DEPLOY_PREPROD_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh naheulbook@naheulbook.fr deploy
  environment:
    name: staging
  except:
    variables:
      - $DEV

deploy_prod:
  image: ubuntu
  stage: deploy
  tags:
    - docker
  script:
    - apt-get update -y && apt-get install rsync -y
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_RSYNC_PROD_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - rsync -a dist/ naheulbook@naheulbook.fr:/frontend
    - ssh-add -D
    - echo "$SSH_DEPLOY_PROD_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh naheulbook@naheulbook.fr deploy
  environment:
    name: production
  when: manual
  except:
    variables:
      - $DEV
